name: Prerelease
on:
    push:
        branches:
            - "development"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    prerelease:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: .nvmrc
                  cache: "pnpm"
                  cache-dependency-path: |
                      pnpm-lock.yaml

            - name: Install Dependencies
              run: pnpm install --frozen-lockfile

            - name: Run Tests
              run: pnpm test --cache-dir=.turbo

            - name: Build
              run: pnpm build --cache-dir=.turbo

            - name: Check for pre.json file existence
              id: check_files
              uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6
              with:
                  files: ".changeset/pre.json"

            - name: Enter prerelease mode (beta by default)
              # If .changeset/pre.json does not exist and we did not recently exit
              # prerelease mode, enter prerelease mode with tag beta
              if: steps.check_files.outputs.files_exists == 'false' && !contains(github.event.head_commit.message, 'Exit prerelease')
              run: pnpm changeset pre enter beta

            - name: Create prerelease PR
              uses: changesets/action@v1
              with:
                  version: pnpm changeset version
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to npm + GitHub
              id: changesets
              # Only run publish if we're still in pre mode and the last commit was
              # via an automatically created Version Packages PR
              if: steps.check_files.outputs.files_exists == 'true' && contains(github.event.head_commit.message, 'changeset-release/development')
              uses: changesets/action@v1
              with:
                  version: echo "This step should never version"
                  publish: pnpm changeset publish
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Tag release with beta on npm
              if: steps.changesets.outputs.published == 'true' && contains(fromJSON(steps.changesets.outputs.publishedPackages).*.name, '@whereby.com/browser-sdk')
              run: npm dist-tag add @whereby.com/browser-sdk@${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }} beta
